{"version":3,"sources":["common/AppHeader.js","components/CardTable.js","constants/index.js","utils/APIUtils.js","components/DataComponent.js","app/App.js","components/SearchComponent.js","components/CountryListTable.js","components/Graph.js","components/GraphComponent.js","components/CountryDataComponent.js","components/Router.js","index.js"],"names":["AppHeader","Header","className","CardTable","props","title","style","color","totalCases","totalRecovered","totalDeaths","API_BASE_URL","COLUMN_NAME","dataIndex","width","sorter","compare","a","b","country","multiple","render","text","record","to","pathname","toLowerCase","state","countryName","totalConfirmed","newConfirmed","newDeaths","newRecovered","recoveryRate","getDate","dateISO","Date","parse","toDateString","DataComponent","lastUpdated","countriesData","data","fetch","then","response","json","push","key","Global","TotalConfirmed","NewConfirmed","TotalDeaths","NewDeaths","NewRecovered","TotalRecovered","toFixed","i","Countries","length","Country","setState","catch","error","console","log","this","loadPromise","columns","dataSource","pagination","pageSize","scroll","y","React","Component","App","Option","Select","SearchComponent","children","countryList","list","sort","showSearch","placeholder","optionFilterProp","onChange","onFocus","onBlur","onSearch","filterOption","input","option","indexOf","optionList","CountryListTable","countryArray","Slug","loadCountryList","parentCallback","onClick","click","getCountryList","size","MyChart","height","margin","top","right","bottom","left","strokeDasharray","type","dataKey","stroke","dot","name","label","strokeWidth","tickLine","interval","angle","offset","position","axisLine","cursor","verticalAlign","GraphComponent","deaths","recoveredCases","params","formDataObject","responseArray","totalCasesObject","deathsObject","recoveredCasesObject","forEach","element","Confirmed","Deaths","Recovered","nextProps","id","CountryDataComponent","callbackFunction","childData","location","window","replace","prev","withRouter","Router","path","component","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46d741c0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport './AppHeader.css';\n\nconst AppHeader = () => (\n    <Layout.Header className=\"app-header\">\n          {/* <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\n          </Menu> */}\n          <p className=\"header-title\">Covid Dashboard</p>\n    </Layout.Header>\n)\n\nexport default AppHeader;\n\n\n\n","import React from \"react\";\n\nimport { Card } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport './component.css';\n\nconst CardTable = (props) => {\n    return(\n        <div className='card-table'>\n            <Card title=\"Total Cases\" className=\"maincounter-wrap\">\n                <h1 style ={{color:'blue'}}>{props.totalCases}</h1>\n            </Card>\n            <Card title=\"Total Recovered\" className=\"maincounter-wrap\">\n                <h1 style ={{color:'green'}}>{props.totalRecovered}</h1>\n            </Card>\n            <Card title=\"Total Deaths\" className=\"maincounter-wrap\">\n                <h1 style ={{color:'red'}}>{props.totalDeaths}</h1>\n            </Card>\n        </div>\n    );\n}\n\nexport default CardTable;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const API_BASE_URL = 'https://api.covid19api.com';\n\nexport const COLUMN_NAME = [\n    {\n      title: \"Country\",\n      dataIndex: \"country\",\n      width: 150,\n      sorter: {\n        compare: \n        function(a, b) {\n          if (a.country > b.country) {\n            return 1;\n          }\n          if (a.country < b.country) {\n            return -1;\n          }\n          return 0;\n        }\n        ,\n        multiple: 1,\n      },\n      render: (text,record) => (\n        <Link\n          to ={{ \n            pathname:`country/${text.toLowerCase()}`,\n            state: {\n              countryName: {text}\n            }\n          }}\n        >{text}\n        </Link>)\n    },\n    {\n      title: \"Total Confirmed\",\n      dataIndex: \"totalConfirmed\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.totalConfirmed - b.totalConfirmed,\n        multiple: 2,\n      },\n    },\n    {\n      title: \"New Confirmed\",\n      dataIndex: \"newConfirmed\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.newConfirmed - b.newConfirmed,\n        multiple: 3,\n      },\n    },\n    {\n      title: \"Total Deaths\",\n      dataIndex: \"totalDeaths\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.totalDeaths - b.totalDeaths,\n        multiple: 4,\n      },\n    },\n    {\n      title: \"New Deaths\",\n      dataIndex: \"newDeaths\",\n      width: 150,\n      className:\"deaths-column\",\n      sorter: {\n        compare: (a, b) => a.newDeaths - b.newDeaths,\n        multiple: 5,\n      },\n    },\n    {\n      title: \"Total Recovered\",\n      dataIndex: \"totalRecovered\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.totalRecovered - b.totalRecovered,\n        multiple: 6,\n      },\n    },\n    {\n      title: \"New Recovered\",\n      dataIndex: \"newRecovered\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.newRecovered - b.newRecovered,\n        multiple: 7,\n      },\n    },\n    {\n      title: \"Recovery Rate\",\n      dataIndex: \"recoveryRate\",\n      width: 150,\n      sorter: {\n        compare: (a, b) => a.recoveryRate - b.recoveryRate,\n        multiple: 8,\n      },\n    }\n  ];\n\nexport const PAGE_SIZE = 50;","import { API_BASE_URL} from '../constants';\n\nexport function getSummary(){\n    return (\n        fetch(API_BASE_URL+\"/summary\")\n    );\n}\n\nexport function getCountrySummary(countryName){\n    return (\n        fetch(API_BASE_URL+`/total/country/${countryName}`)\n    );\n}\n\nexport function getCountryList(){\n    return (\n        fetch(API_BASE_URL+`/countries`)\n    );\n}\n\nexport function getDate(dateISO) {\n    return new Date(Date.parse(dateISO)).toDateString();\n}","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport CardTable from \"../components/CardTable\";\nimport { Table } from \"antd\";\nimport { COLUMN_NAME, PAGE_SIZE } from \"../constants\";\nimport {getSummary, getDate} from \"../utils/APIUtils\";\nimport './component.css';\n\nclass DataComponent extends React.Component {  \n  state = {\n    totalConfirmed:'',\n    totalDeaths:'',\n    totalRecovered:'',\n    newConfirmed: '',\n    newDeaths: '',\n    newRecovered: '',\n    lastUpdated:'',\n    countriesData:'',\n    data:''\n  }\n\n  loadPromise(){\n    let promise = getSummary();\n    promise            \n        .then(response =>\n          response.json().then(json =>\n            {\n              const data = [];\n              data.push({\n                key: 0,\n                country: 'World',\n                totalConfirmed: json.Global.TotalConfirmed,\n                newConfirmed: json.Global.NewConfirmed,\n                totalDeaths: json.Global.TotalDeaths,\n                newDeaths: json.Global.NewDeaths,\n                newRecovered: json.Global.NewRecovered,\n                totalRecovered: json.Global.TotalRecovered,\n                recoveryRate: (json.Global.TotalRecovered/json.Global.TotalConfirmed).toFixed(2)\n              });\n\n              for (let i = 0; i < json.Countries.length; i++) {\n                data.push({\n                  key: i+1,\n                  country: json.Countries[i].Country,\n                  totalConfirmed: json.Countries[i].TotalConfirmed,\n                  newConfirmed: json.Countries[i].NewConfirmed,\n                  totalDeaths: json.Countries[i].TotalDeaths,\n                  newDeaths: json.Countries[i].NewDeaths,\n                  newRecovered: json.Countries[i].NewRecovered,\n                  totalRecovered: json.Countries[i].TotalRecovered,\n                  recoveryRate: (json.Countries[i].TotalConfirmed > 0 ? json.Countries[i].TotalRecovered/json.Countries[i].TotalConfirmed : 1).toFixed(2)\n                });\n              }\n\n              this.setState({\n                totalConfirmed: json.Global.TotalConfirmed,\n                totalDeaths: json.Global.TotalDeaths,\n                totalRecovered: json.Global.TotalRecovered,\n                newConfirmed: json.Global.NewConfirmed,\n                newDeaths: json.Global.NewDeaths,\n                newRecovered: json.Global.NewRecovered,\n                lastUpdated: json.Date,\n                countriesData: json.Countries,\n                data: data\n              });\n            }\n          )  \n        )\n        .catch(error => console.log(error));\n  }\n\n  componentDidMount(){\n    this.loadPromise();\n  }\n  \n  render() {\n    const columns = COLUMN_NAME;\n    return (\n      <div className=\"dashContainer\">\n        <div className = 'last-updated'>\n          <p>{'Last Updated :'}</p>\n          {getDate(this.state.lastUpdated)}\n        </div>\n        <CardTable \n          totalCases =  {this.state.totalConfirmed}\n          totalRecovered = {this.state.totalRecovered}\n          totalDeaths = {this.state.totalDeaths}\n        />\n        <Table\n          columns={columns}\n          dataSource={this.state.data}\n          pagination={{ pageSize: PAGE_SIZE }}\n          scroll={{ y: 1240 }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataComponent;","import React from \"react\";\nimport \"../index.css\";\nimport \"./app.css\";\nimport DataComponent from \"../components/DataComponent\";\n\n\nconst App = () => {\n    return(\n      <div>\n        <DataComponent />\n      </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select } from 'antd';\nimport {Link, Redirect} from 'react-router-dom';\n\nconst { Option } = Select;\n\nclass SearchComponent extends React.Component {\n\n    optionList(){\n      const children = [];\n      const countryList = this.props.list.sort(function(a,b){\n        if(a.country < b.country){\n          return -1\n        }\n        if(a.country > b.country){\n          return 1\n        }\n        return 0\n      }\n      );\n      for (let i = 0; i < countryList.length; i++) {\n        children.push(\n          <Option key={countryList[i].key}>\n            <Link to={`/country/${countryList[i].country}`} className=\"nav-text\">\n              {countryList[i].country}\n            </Link>\n          </Option>\n        );\n      }\n      return children;\n    }\n\n    render(){\n        return(\n          <div>\n            <Select\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a Country\"\n                optionFilterProp=\"key\"\n                onChange={this.onChange}\n                onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                onSearch={this.onSearch}\n                filterOption={(input, option) => \n                   option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n            >\n                {this.optionList()}\n            </Select>\n          </div>\n            )\n    }\n}\n\nexport default SearchComponent;","import React from 'react';\nimport { Table } from \"antd\";\nimport { PAGE_SIZE } from '../constants'\nimport {getCountryList} from '../utils/APIUtils'\nimport {NavLink} from 'react-router-dom';\n\nimport SearchComponent from './SearchComponent'\n\nclass CountryListTable extends React.Component {\n    state = {\n        countryList: []\n    }\n\n    loadCountryList(){\n        let promise = getCountryList();\n        promise.then(response =>\n            response.json().then(json =>\n            {\n                const countryArray = [];\n                for (let i = 0; i < json.length; i++) {\n                    countryArray.push({\n                        key: json[i].Slug,\n                        country: json[i].Country\n                    })\n                }\n                this.setState({\n                    countryList:countryArray\n                })\n            })\n        )\n    }\n\n    componentDidMount(){\n        this.loadCountryList();\n    }\n\n    click(text) {\n        this.props.parentCallback(text);\n    }\n\n    getCountryList() {\n        return [{\n            title: \"Country\",\n            dataIndex: \"country\",\n            width: 150,\n            sorter: {\n              compare: \n              function(a, b) {\n                if (a.country > b.country) {\n                  return 1;\n                }\n                if (a.country < b.country) {\n                  return -1;\n                }\n                return 0;\n              }\n              ,\n              multiple: 1,\n            },\n            render: (text,record) => (\n                <div >\n                <NavLink\n                    to ={{ \n                      pathname:`/country/${text.toLowerCase()}`,\n                      \n                    }}\n                    onClick={() => {\n                        this.click(text);\n                    }}\n                    >\n                    {text}\n                </NavLink>\n              </div>\n              )\n          }];\n    }\n    \n    render(){\n        if(this.state.countryList.length > 0) {\n            return ( \n                <div>\n                   <SearchComponent className='searchBar' list={this.state.countryList}/>\n                   <div></div>\n                   <Table \n                    dataSource={this.state.countryList} \n                    columns={this.getCountryList()}\n                    pagination={{ pageSize: PAGE_SIZE }}\n                    scroll={{ y: 840 }}\n                    size=\"small\"\n                    />\n                </div>\n            );\n        }\n        return(<div></div>);        \n    }\n}\n\nexport default CountryListTable;","import React from 'react'\nimport { LineChart, Line, Label, CartesianGrid, Legend, XAxis, YAxis, Tooltip } from 'recharts';\n\nconst MyChart = (props) => {\n  return (\n    <LineChart \n      width={600} \n      height={300} \n      data={props.data} \n      margin={\n        { \n          top: 5, \n          right: 20, \n          bottom: 5, \n          left: 0 \n        }}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <Line \n        type=\"monotone\" \n        dataKey=\"cases\" \n        stroke={props.stroke} \n        dot={false} \n        name={props.label}\n        strokeWidth={3}\n      />\n      <XAxis dataKey=\"date\" tickLine={true} interval={20} angle={-30} >\n        <Label offset={0} position=\"insideBottom\" />\n      </XAxis>\n      <YAxis axisLine={false}/>\n      {/* <YAxis scale=\"log\" domain={[0.01, 'dataMax']} allowDataOverflow /> */}\n      <Tooltip cursor={false}/>\n      <Legend verticalAlign=\"top\" height={36}/>\n    </LineChart>\n  );\n}\n\nexport default MyChart;","import React from 'react';\nimport MyChart from './Graph';\n\nimport { getCountrySummary, getDate } from \"../utils/APIUtils\";\n\nclass GraphComponent extends React.Component{\n\n    state={\n        countryName: '',\n        totalCases: [],\n        deaths: [],\n        recoveredCases: []\n    }\n\n    loadPromise(params){\n        let promise = getCountrySummary(params);\n        promise            \n        .then(response =>\n          response.json().then(json => {\n              this.formDataObject(json)\n            }\n        ))\n    }\n\n    formDataObject(responseArray){\n        const totalCasesObject = [];\n        const deathsObject = [];\n        const recoveredCasesObject = [];\n        responseArray.forEach(element => {\n            totalCasesObject.push({\n                'date': getDate(element.Date),\n                'cases': element.Confirmed\n            });\n            deathsObject.push({\n                'date': getDate(element.Date),\n                'cases': element.Deaths\n            });\n            recoveredCasesObject.push({\n                'date': getDate(element.Date),\n                'cases': element.Recovered\n            });\n        });\n        this.setState({\n            totalCases: totalCasesObject,\n            deaths: deathsObject,\n            recoveredCases: recoveredCasesObject\n        });\n    }\n\n    componentDidMount(){\n        this.loadPromise(this.props.countryName);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.countryName !== this.props.countryName){\n            this.setState({\n                totalCases: []\n            }, () => {\n                this.loadPromise(nextProps.countryName)\n            });\n        }\n    }\n\n    render(){\n        if(this.state.totalCases.length > 0) {\n            return(\n                <div>\n                    <MyChart id = \"totalCases\" data= {this.state.totalCases} label={'Total Cases'} stroke = 'blue'/>\n                    <MyChart id = \"deaths\" data= {this.state.deaths} label={'Total Deaths'} stroke = 'red'/>\n                    <MyChart id = \"recovered\" data= {this.state.recoveredCases} label={'Recovered Cases'} stroke = 'green' />\n                </div>\n            )\n        }\n        else {\n            return(<div></div>);\n        }\n    }\n}\n\nexport default GraphComponent;\n","import React from 'react';\nimport CountryListTable from './CountryListTable';\nimport GraphComponent from './GraphComponent';\nimport {withRouter} from \"react-router-dom\";\n\nclass CountryDataComponent extends React.Component {  \n\n    state = {\n        countryName: ''\n    }\n    \n    callbackFunction = (childData) => {\n        this.setState({\n            countryName: childData\n        });\n    }\n\n    componentDidMount(){\n       this.setState({\n        countryName: this.props.location.state ? this.props.location.state.countryName.text.toLowerCase() : window.location.pathname.replace('/country/','')\n       })\n    }\n\n    componentDidUpdate(prev){\n        if(this.props.location.pathname !== prev.location.pathname) {\n            this.setState({\n                countryName: this.props.location.pathname.replace('/country/','')\n            })\n        }\n    }\n\n    render(){\n        if(this.state.countryName !== '') {\n            return(\n                <div className=\"dashboard\">\n                    <div className='countryList column left'>\n                        <CountryListTable parentCallback = {this.callbackFunction}/>\n                    </div>\n                    <div className='charts-container column right'>\n                        <GraphComponent countryName={this.state.countryName}/>\n                    </div>\n                </div>\n                \n            )\n        }\n        return <div></div>\n\n    }\n}\n\nexport default withRouter(props => <CountryDataComponent {...props}/>);","import React from 'react';\nimport AppHeader from \"../common/AppHeader\";\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport App from '../app/App';\nimport CountryDataComponent from './CountryDataComponent';\n\nconst Router = () => (\n    <BrowserRouter>\n        <AppHeader />\n        <Switch>\n            <Route path=\"/\" component={ App } exact />\n            <Route path=\"/country/:name\" component={CountryDataComponent} exact/>\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './components/Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}